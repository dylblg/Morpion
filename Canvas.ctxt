#BlueJ class context
comment0.params=title
comment0.target=Canvas(java.lang.String)
comment0.text=\n\ Cr\u221A\u00A9e\ un\ Canvas\ avec\ une\ hauteur,\ une\ largeur\ et\ une\ couleur\ par\ d\u221A\u00A9faut\ de\ l'arri\u221A\u00AEre-plan\ \n\ (300,\ 300,\ blanc).\n\ @param\ title\ \ titre\ qui\ doit\ appara\u221A\u00C6tre\ dans\ le\ cadre\ Canvas\ \ \ \ \ \n
comment1.params=title\ width\ height
comment1.target=Canvas(java.lang.String,\ int,\ int)
comment1.text=\n\ Cr\u221A\u00A9e\ un\ Canvas\ avec\ une\ couleur\ par\ d\u221A\u00A9faut\ pour\ l'arri\u221A\u00AEre-plan\ (blanc).\n\ @param\ title\ \ titre\ qui\ doit\ appara\u221A\u00C6tre\ dans\ le\ cadre\ Canvas\n\ @param\ width\ \ largeur\ souhait\u221A\u00A9e\ du\ fond\n\ @param\ height\ \ hauteur\ souhait\u221A\u00A9e\ pour\ le\ fond\n
comment10.params=xPos\ yPos\ diameter
comment10.target=void\ fillCircle(int,\ int,\ int)
comment10.text=\n\ Remplit\ les\ dimensions\ internes\ du\ cercle\ donn\u221A\u00A9\ avec\ la\ couleur\n\ donn\u221A\u00A9e\ du\ premier\ plan\ du\ fond.\n
comment11.params=xPos\ yPos\ width\ height
comment11.target=void\ fillRectangle(int,\ int,\ int,\ int)
comment11.text=\n\ Remplit\ les\ dimensions\ internes\ du\ rectangle\ donn\u221A\u00A9\ avec\ la\ couleur\ actuelle\n\ du\ fond.\ C'est\ une\ m\u221A\u00A9thode\ pratique.\ Un\ effet\ similaire\ \n\ peut\ \u221A\u2122tre\ obtenu\ avec\ la\ m\u221A\u00A9thode\ fill.\n
comment12.params=xPos\ yPos\ width\ height
comment12.target=void\ Rectangle(int,\ int,\ int,\ int)
comment12.text=\n\ Remplit\ les\ dimensions\ internes\ du\ rectangle\ donn\u221A\u00A9\ avec\ la\ couleur\ actuelle\n\ du\ fond.\ C'est\ une\ m\u221A\u00A9thode\ pratique.\ Un\ effet\ similaire\ \n\ peut\ \u221A\u2122tre\ obtenu\ avec\ la\ m\u221A\u00A9thode\ fill.\n
comment13.params=
comment13.target=void\ erase()
comment13.text=\n\ Efface\ la\ totalit\u221A\u00A9\ du\ fond.\n
comment14.params=xPos\ yPos\ diameter
comment14.target=void\ eraseCircle(int,\ int,\ int)
comment14.text=\n\ Efface\ les\ dimensions\ internes\ du\ cercle\ donn\u221A\u00A9.\ Il\ s'agit\ d'une\n\ m\u221A\u00A9thode\ pratique.\ Un\ effet\ similaire\ peut\ \u221A\u2122tre\ obtenu\ avec\n\ la\ m\u221A\u00A9thode\ erase.\n
comment15.params=xPos\ yPos\ width\ height
comment15.target=void\ eraseRectangle(int,\ int,\ int,\ int)
comment15.text=\n\ Efface\ les\ dimensions\ internes\ du\ rectangle\ donn\u221A\u00A9.\ Il\ s'agit\ d'une\n\ m\u221A\u00A9thode\ pratique.\ Un\ effet\ similaire\ peut\ \u221A\u2122tre\ obtenu\ avec\n\ la\ m\u221A\u00A9thode\ erase.\n
comment16.params=shape
comment16.target=void\ erase(java.awt.Shape)
comment16.text=\n\ \ \ \ Efface\ l'int\u221A\u00A9rieur\ d'une\ forme\ donn\u221A\u00A9e\ \u221A\u2020\ l'\u221A\u00A9cran.\n\ @param\ \ shape\ \ l'objet\ forme\ \u221A\u2020\ effacer\n
comment17.params=shape
comment17.target=void\ eraseOutline(java.awt.Shape)
comment17.text=\n\ Efface\ le\ contour\ d'une\ forme\ donn\u221A\u00A9e\ \u221A\u2020\ l'\u221A\u00A9cran.\n\ @param\ \ shape\ \ l'objet\ forme\ \u221A\u2020\ effacer\n
comment18.params=image\ x\ y
comment18.target=boolean\ drawImage(java.awt.Image,\ int,\ int)
comment18.text=\n\ Dessine\ une\ image\ sur\ le\ fond.\n\ @param\ \ image\ \ \ l'objet\ Image\ \u221A\u2020\ afficher\n\ @param\ \ x\ \ \ \ \ \ \ coordonn\u221A\u00A9e\ x\ pour\ le\ placement\ de\ l'Image\ \n\ @param\ \ y\ \ \ \ \ \ \ coordonn\u221A\u00A9e\ y\ pour\ le\ placement\ de\ l'Image\ \n\ @return\ \ renvoie\ une\ valeur\ bool\u221A\u00A9enne\ indiquant\ si\ l'image\ a\ \u221A\u00A9t\u221A\u00A9\ \ \n\ \ \ \ \ \ \ \ \ \ compl\u221A\u00AEtement\ charg\u221A\u00A9e\n
comment19.params=text\ x\ y
comment19.target=void\ drawString(java.lang.String,\ int,\ int)
comment19.text=\n\ Dessine\ un\ String\ sur\ le\ fond.\n\ @param\ \ text\ \ \ le\ String\ \u221A\u2020\ afficher\n\ @param\ \ x\ \ \ \ \ \ coordonn\u221A\u00A9e\ x\ pour\ le\ placement\ du\ texte\n\ @param\ \ y\ \ \ \ \ \ coordonn\u221A\u00A9e\ y\ pour\ le\ placement\ du\ texte\n
comment2.params=title\ width\ height\ bgColor
comment2.target=Canvas(java.lang.String,\ int,\ int,\ java.awt.Color)
comment2.text=\n\ Cr\u221A\u00A9e\ un\ Canvas.\n\ @param\ title\ \ titre\ qui\ doit\ appara\u221A\u00C6tre\ dans\ le\ cadre\ Canvas\n\ @param\ width\ \ largeur\ souhait\u221A\u00A9e\ du\ fond\n\ @param\ height\ \ hauteur\ souhait\u221A\u00A9e\ pour\ le\ fond\n\ @param\ bgClour\ \ couleur\ d'arri\u221A\u00AEre-plan\ souhait\u221A\u00A9e\ pour\ le\ fond\n
comment20.params=text\ x\ y
comment20.target=void\ eraseString(java.lang.String,\ int,\ int)
comment20.text=\n\ Efface\ un\ String\ du\ fond.\n\ @param\ \ text\ \ \ \ \ le\ String\ \u221A\u2020\ afficher\n\ @param\ \ x\ \ \ \ \ \ \ \ coordonn\u221A\u00A9e\ x\ pour\ le\ placement\ du\ texte\n\ @param\ \ y\ \ \ \ \ \ \ \ coordonn\u221A\u00A9e\ y\ pour\ le\ placement\ du\ texte\n
comment21.params=x1\ y1\ x2\ y2
comment21.target=void\ drawLine(int,\ int,\ int,\ int)
comment21.text=\n\ Dessine\ un\ trait\ sur\ le\ fond.\n\ @param\ \ x1\ \ \ coordonn\u221A\u00A9e\ x\ du\ d\u221A\u00A9but\ de\ ligne\ \n\ @param\ \ y1\ \ \ coordonn\u221A\u00A9e\ y\ du\ d\u221A\u00A9but\ de\ ligne\n\ @param\ \ x2\ \ \ coordonn\u221A\u00A9e\ x\ de\ fin\ de\ ligne\ \n\ @param\ \ y2\ \ \ coordonn\u221A\u00A9e\ y\ de\ fin\ de\ ligne\n
comment22.params=center\ hauteur\ largeur
comment22.target=void\ drawRectangle(int,\ int,\ int)
comment23.params=newColor
comment23.target=void\ setForegroundColor(java.awt.Color)
comment23.text=\n\ D\u221A\u00A9finit\ la\ couleur\ de\ premier\ plan\ du\ fond.\n\ @param\ \ newColor\ \ \ la\ nouvelle\ couleur\ du\ premier\ plan\ du\ fond\ \n
comment24.params=
comment24.target=java.awt.Color\ getForegroundColor()
comment24.text=\n\ Renvoie\ la\ couleur\ actuelle\ du\ premier\ plan.\n\ @return\ \ \ la\ couleur\ du\ premier\ plan\ du\ fond\ \n
comment25.params=newColor
comment25.target=void\ setBackgroundColor(java.awt.Color)
comment25.text=\n\ D\u221A\u00A9finit\ la\ couleur\ d'arri\u221A\u00AEre-plan\ du\ fond.\n\ @param\ \ newColor\ \ \ la\ nouvelle\ couleur\ d'arri\u221A\u00AEre-plan\ du\ fond\n
comment26.params=
comment26.target=java.awt.Color\ getBackgroundColor()
comment26.text=\n\ Renvoie\ la\ couleur\ actuelle\ du\ fond\n\ @return\ \ \ la\ couleur\ d'arri\u221A\u00AEre-pland\ du\ fond\n
comment27.params=newFont
comment27.target=void\ setFont(java.awt.Font)
comment27.text=\n\ change\ la\ police\ actuelle\ utilis\u221A\u00A9e\ sur\ le\ fond\n\ @param\ \ newFont\ \ \ nouvelle\ police\ \u221A\u2020\ utiliser\ pour\ la\ sortie\ de\ String\ \n
comment28.params=
comment28.target=java.awt.Font\ getFont()
comment28.text=\n\ Renvoie\ la\ police\ actuelle\ du\ fond.\n\ @return\ \ \ \ \ la\ police\ actuellement\ utilis\u221A\u00A9e\n
comment29.params=width\ height
comment29.target=void\ setSize(int,\ int)
comment29.text=\n\ D\u221A\u00A9finit\ la\ taille\ du\ fond.\n\ @param\ \ width\ \ \ \ nouvelle\ largeur\n\ @param\ \ height\ \ \ nouvelle\ hauteur\ \n
comment3.params=e
comment3.target=void\ keyTyped(java.awt.event.KeyEvent)
comment30.params=
comment30.target=java.awt.Dimension\ getSize()
comment30.text=\n\ Renvoie\ la\ taille\ du\ fond.\n\ @return\ \ \ \ \ Les\ dimensions\ actuelles\ du\ fond\n
comment31.params=milliseconds
comment31.target=void\ wait(int)
comment31.text=\n\ Attend\ un\ nombre\ sp\u221A\u00A9cifi\u221A\u00A9\ de\ millisecondes\ avant\ de\ se\ terminer.\n\ Ceci\ fournit\ une\ mani\u221A\u00AEre\ simple\ de\ sp\u221A\u00A9cifier\ un\ petit\ d\u221A\u00A9lai\ qui\ peut\ \u221A\u2122tre\n\ utilis\u221A\u00A9\ pour\ produire\ des\ animations.\n\ @param\ \ milliseconds\ \ le\ nombre\n
comment4.params=e
comment4.target=void\ keyPressed(java.awt.event.KeyEvent)
comment5.params=e
comment5.target=void\ keyReleased(java.awt.event.KeyEvent)
comment6.params=visible
comment6.target=void\ setVisible(boolean)
comment6.text=\n\ D\u221A\u00A9finit\ la\ visibilit\u221A\u00A9\ du\ fond\ et\ am\u221A\u00AEne\ le\ fond\ au\ premier\ plan\ de\ l'\u221A\u00A9cran\n\ lorsqu'il\ est\ visible.\ Cette\ m\u221A\u00A9thode\ peut\ aussi\ \u221A\u2122tre\ utilis\u221A\u00A9e\ pour\ amener\ un\ fond\n\ d\u221A\u00A9j\u221A\u2020\ visible\ \u221A\u2020\ l'avant\ des\ autres\ fen\u221A\u2122tres.\n\ @param\ visible\ \ valeur\ bool\u221A\u00A9enne\ repr\u221A\u00A9sentant\ la\ visibilit\u221A\u00A9\ souhait\u221A\u00A9e\ du\n\ fond\ (true\ ou\ false)\ \n
comment7.params=
comment7.target=boolean\ isVisible()
comment7.text=\n\ Fournit\ des\ informations\ sur\ la\ visibilit\u221A\u00A9\ du\ Canvas.\n\ @return\ \ true\ si\ le\ fond\ est\ visible,\ false\ autrement\n
comment8.params=shape
comment8.target=void\ draw(java.awt.Shape)
comment8.text=\n\ Dessine\ le\ contour\ d'une\ forme\ donn\u221A\u00A9e\ sur\ le\ fond.\n\ @param\ \ shape\ \ l'objet\ forme\ \u221A\u2020\ dessiner\ sur\ le\ fond\n
comment9.params=shape
comment9.target=void\ fill(java.awt.Shape)
comment9.text=\n\ Remplit\ les\ dimensions\ internes\ d'une\ forme\ donn\u221A\u00A9e\ avec\ la\ couleur\ \n\ donn\u221A\u00A9e\ du\ premier\ plan\ sur\ le\ fond.\n\ @param\ \ shape\ \ l'objet\ forme\ \u221A\u2020\ remplir\ \n
numComments=32
